/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['AppController_getHello'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/users': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['UsersController_create'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/users/{id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['UsersController_findOne'];
    put?: never;
    post?: never;
    delete: operations['UsersController_remove'];
    options?: never;
    head?: never;
    patch: operations['UsersController_update'];
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    CreateUserDto: Record<string, never>;
    UserDto: {
      id: number;
      fullName: string;
      email: string;
      password: string;
      avatar: string;
      status: string;
      role: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
      /** Format: date-time */
      deletedAt?: string;
    };
    UpdateUserDto: Record<string, never>;
    LoginParamsDto: {
      /** @default admin@example.com */
      email: string;
      /** @default Admin@123 */
      password: string;
    };
    LoginDto: {
      fullName: string;
      accessToken: string;
      refreshToken: string;
      expiresIn: number | null;
      /** @enum {string} */
      role: 'admin' | 'user';
    };
    TimeZoneDto: {
      /**
       * @description Hours in timezone
       * @example null
       */
      Hours: number | null;
      /**
       * @description Minutes in timezone
       * @example 0
       */
      Minutes: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  AppController_getHello: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  UsersController_create: {
    parameters: {
      query?: never;
      header: {
        /** @description Application language */
        'x-app-lang': 'kr' | 'en';
      };
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateUserDto'];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  UsersController_findOne: {
    parameters: {
      query?: never;
      header: {
        /** @description Application language */
        'x-app-lang': 'kr' | 'en';
      };
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserDto'];
        };
      };
    };
  };
  UsersController_remove: {
    parameters: {
      query?: never;
      header: {
        /** @description Application language */
        'x-app-lang': 'kr' | 'en';
      };
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  UsersController_update: {
    parameters: {
      query?: never;
      header: {
        /** @description Application language */
        'x-app-lang': 'kr' | 'en';
      };
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateUserDto'];
      };
    };
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  StorageController_getPresignedUploadUrl: {
    parameters: {
      query?: never;
      header: {
        /** @description Application language */
        'x-app-lang': 'kr' | 'en';
      };
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['GetPresignedUrlDto'];
      };
    };
    responses: {
      /** @description Presigned URL generated successfully */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UploadResponseDto'];
        };
      };
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UploadResponseDto'];
        };
      };
    };
  };
}
